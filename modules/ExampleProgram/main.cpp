#include "project_cmakevariables.h" //Project cmake variables automatically generated by the CMake root project.

//cmake variables automatically generated by this CMake module project.
//Notice: the first part of the name is the same as declared in PROJECT_NAME in the CMake project.
#include "ExampleProgram_cmakevariables.h"
#include <iostream>
#include <toml.hpp>
#include <MqttManager.hpp>
#include <Property.hpp>
#include <Shmem.hpp>
#include <ExampleInclude.hpp>
#include <Moquette2/MoquetteClient.hpp>

using namespace std;

int main(void) {

    //root MQTT topic
    string topic = "ExampleRover/ExampleProgram/_state";
    //SHMEM key for shared object
    string SHMEM_key = "ExampleVariable_key";
    //Path for config file
    string configFilePath = DIANA_ExampleProgram_CFG_FILE_CONFIG_TOML;
    int exampleVariable;

    // Instance a SHMEM writer
    ShmemWriter<int> writer(SHMEM_key, 1);
    // Instance a SHMEM reader
    ShmemReader<int> reader(SHMEM_key, 1);

    //Init Moquette
    MqttManager::init(topic);
    //Init Moquette Property
    Property<int> sender = Property<int>(topic, Property<int>::propertyAccessType::R);


    //Parse config file
    auto data = toml::parse(configFilePath);
    auto exampleTable = toml::find(data, "example");
    exampleVariable  = toml::find<int>(exampleTable, "example_variable");

    // Call an exampleFunction() from ExampleInclude.
    int result = exampleFunction(0);

    //Set status "ok"
    MqttManager::announceStatusOn();

    //prints some project variables, defined in <buildfolder>/project_cmakevariables.h and <buildfolder>/<moduleName>_cmakevariables.h
    cout << DIANA_ExampleProgram_PROJECT_NAME << " from project "<<DIANA_PROJECT_NAME<<" version " << DIANA_PROJECT_VERSION << endl
            << "Example file path is "<< DIANA_ExampleProgram_FILE_EXAMPLEFILE_TXT << endl
            << "Config file path is " << DIANA_ExampleProgram_CFG_FILE_CONFIG_TOML << endl
            << "Installation folder is " <<DIANA_ExampleProgram_MODULE_ROOTPATH<< endl<< endl;

    //set value for SHMEM writer
    writer[0] = exampleVariable;

    //sleep 35 seconds
    sleep(3);

    //Send value over mqtt
    sender.setValue(exampleVariable);

    cout << "Sent ExampleVariable (" << exampleVariable<<") on MQTT"<<endl;

    //read variables
    cout << "ExampleVariable on SHMEM is "<< reader[0]<<endl;

    //print exampleVariable
    cout << "ExampleVariable is: "<<exampleVariable << endl;

    //Close MQTT connection.
    MqttManager::cleanup();
    return 0;
}
